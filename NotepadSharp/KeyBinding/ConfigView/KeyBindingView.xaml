<UserControl x:Class="NotepadSharp.KeyBindingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             local:CommandBindingBehavior.LostKeyboardFocusCommand="{Binding LostKeyboardFocusCommand}"
             xmlns:local="clr-namespace:NotepadSharp"
             mc:Ignorable="d" 
             MinWidth="300"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <local:BoolToPropValueConverter x:Key="IsEditingBindingColorConverter" ValueForTrue="Red" ValueForFalse="Gray"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="14"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width=".5*"/>
            <ColumnDefinition Width=".5*"/>
            <ColumnDefinition Width=".5*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Button Margin="1"
                Style="{StaticResource SmallCloseButton}"
                Command="{Binding DeleteBindingCommand}" 
                Visibility="{Binding DeleteBindingCommand, Converter={StaticResource NullToHiddenConverter}}"/>

        <Border Grid.Column="1"
                Margin="1" 
                Background="LightGray"
                BorderThickness=".75"
                BorderBrush="{Binding IsEditingBinding.Value, Converter={StaticResource IsEditingBindingColorConverter}}">
                <TextBox TextAlignment="Center"
                         IsReadOnly="True"
                         Cursor="Arrow"
                         VerticalAlignment="Center"
                         Style="{StaticResource TextBox_NoBorder}"
                         local:CommandBindingBehavior.PreviewLeftClickCommand="{Binding StartEditingCommand}" 
                         local:CommandBindingBehavior.LostFocusCommand="{Binding EndEditingCommand}"
                         local:CommandBindingBehavior.PreviewKeyDownCommand="{Binding KeyPressHandler.KeyDownCommand}"
                         local:CommandBindingBehavior.PreviewKeyUpCommand="{Binding KeyPressHandler.KeyUpCommand}"
                         Text="{Binding Keys.Value, Converter={StaticResource PrettyPrintKeyBindingConverter}, Mode=OneWay}"/>
        </Border>

        <CheckBox Grid.Column="2" HorizontalAlignment="Center" Focusable="False" IsChecked="{Binding ExecuteOnKeyDown.Value}"/>
        <CheckBox Grid.Column="3" HorizontalAlignment="Center" Focusable="False" IsChecked="{Binding RepeatOnKeyDown.Value}"/>
        <CheckBox Grid.Column="4" HorizontalAlignment="Center" Focusable="False" IsChecked="{Binding ExecuteOnKeyUp.Value}"/>

        <Border Grid.Column="5"
                BorderBrush="Gray"
                Margin="1" 
                BorderThickness=".75">
            <TextBox TextAlignment="Left" 
                     Padding="2"
                     AllowDrop="True"
                     ToolTipService.ToolTip="{Binding PathOrLiteral.Value}"
                     ToolTipService.IsEnabled="{Binding PathOrLiteral.Value, Converter={StaticResource NullOrEmptyToFalseConverter}}"
                     local:CommandBindingBehavior.PreviewDragOverCommand="{Binding DragDrop.DragOverCommand}"
                     local:CommandBindingBehavior.PreviewDropCommand="{Binding DragDrop.DropCommand}"
                     local:CommandBindingBehavior.LostFocusCommand="{Binding PathOrLiteralLostFocusCommand}"
                     local:CommandBindingBehavior.PreviewLeftClickCommand="{Binding PathOrLiteralGotFocusCommand}"
                     Text="{Binding PathOrLiteral.Value, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox_NoBorder}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PathOrLiteralIsFocused.Value}" Value="true">
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Border>
    </Grid>
</UserControl>
